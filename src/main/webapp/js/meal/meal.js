document.addEventListener('DOMContentLoaded', function () {

    if(checkAuth())
        loadFoods();

});

function loadFoods() {
    fetch('http://localhost:8080/cycleK-1.0.0/rest/foods')
        .then(response => response.json())
        .then(data => {
            const foods = data['resource-list'].map(item => item.food);
            populateDropdowns(foods);
        })
        .catch(error => {
            console.error('Error loading foods:', error);
        });
}

function populateDropdowns(foods) {
    const mealTypes = ['breakfast', 'lunch', 'snack', 'dinner'];

    mealTypes.forEach(function (mealType) {
        const select = document.getElementById(`${mealType}-foods`);
        foods.forEach(function (food) {
            const option = document.createElement('option');
            option.value = food.id;
            option.textContent = food.fdnm;
            select.appendChild(option);
        });
    });
}

window.addFood = function addFood(mealType) {
    const select = document.getElementById(`${mealType}-foods`);
    const gramsInput = document.getElementById(`${mealType}-grams`);
    const foodId = select.value;
    const foodName = select.options[select.selectedIndex].text;
    const grams = gramsInput.value;

    if (foodId && grams) {
        mealsToDisplay[mealType].push({ idFood: parseInt(foodId), qty: parseInt(grams) });

        const foodList = document.getElementById(`${mealType}-list`);
        const listItem = document.createElement('li');
        listItem.textContent = `${foodName} - ${grams} grams`;
        foodList.appendChild(listItem);

        gramsInput.value = ''; // Clear the grams input after adding
    } else {
        alert('Please select a food and enter grams.');
    }
};

window.registerMeal = function registerMeal(mealType) {
    const mealTypeMap = {
        breakfast: 1,
        lunch: 2,
        snack: 3,
        dinner: 4
    };
    const mealTypeNumber = mealTypeMap[mealType];

    const mealData = {
        id: null, // Left null to be generated by the database
        idUser: null, // Left null to be managed in the backend
        date: null, // Left null to be managed in the backend
        mealType: mealTypeNumber,
        meal: JSON.stringify({
            meal: mealsToDisplay[mealType]
        })
    };

    fetch('http://localhost:8080/cycleK-1.0.0/rest/meal/', {
        credentials: 'include',
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(mealData)
    })
        .then(response => response.json())
        .then(data => {
            console.log('Success:', data);
            alert('Meal registered successfully!');
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error registering meal.');
        });
};

const mealsToDisplay = {
    breakfast: [],
    lunch: [],
    snack: [],
    dinner: []
};
